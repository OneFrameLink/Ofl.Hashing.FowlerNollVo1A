using System.Runtime.InteropServices;
using Xunit;

namespace Ofl.Hashing.FowlerNollVo1A.Tests
{
    public class FowlerNollVo1A32BitHashAlgorithmTests
    {
        #region Tests.

        [Theory]
        [InlineData("", false, 0x811c9dc5, null)]
        [InlineData("a", false, 0xe40c292c, null)]
        [InlineData("b", false, 0xe70c2de5, null)]
        [InlineData("c", false, 0xe60c2c52, null)]
        [InlineData("d", false, 0xe10c2473, null)]
        [InlineData("e", false, 0xe00c22e0, null)]
        [InlineData("f", false, 0xe30c2799, null)]
        [InlineData("fo", false, 0x6222e842, null)]
        [InlineData("foo", false, 0xa9f37ed7, null)]
        [InlineData("foob", false, 0x3f5076ef, null)]
        [InlineData("fooba", false, 0x39aaa18a, null)]
        [InlineData("foobar", false, 0xbf9cf968, null)]
        [InlineData("", true, 0x050c5d1f, null)]
        [InlineData("a", true, 0x2b24d044, null)]
        [InlineData("b", true, 0x9d2c3f7f, null)]
        [InlineData("c", true, 0x7729c516, null)]
        [InlineData("d", true, 0xb91d6109, null)]
        [InlineData("e", true, 0x931ae6a0, null)]
        [InlineData("f", true, 0x052255db, null)]
        [InlineData("fo", true, 0xbef39fe6, null)]
        [InlineData("foo", true, 0x6150ac75, null)]
        [InlineData("foob", true, 0x9aab3a3d, null)]
        [InlineData("fooba", true, 0x519c4c3e, null)]
        [InlineData("foobar", true, 0x0c1c9eb8, null)]
        [InlineData("ch", false, 0x5f299f4e, null)]
        [InlineData("cho", false, 0xef8580f3, null)]
        [InlineData("chon", false, 0xac297727, null)]
        [InlineData("chong", false, 0x4546b9c0, null)]
        [InlineData("chongo", false, 0xbd564e7d, null)]
        [InlineData("chongo ", false, 0x6bdd5c67, null)]
        [InlineData("chongo w", false, 0xdd77ed30, null)]
        [InlineData("chongo wa", false, 0xf4ca9683, null)]
        [InlineData("chongo was", false, 0x4aeb9bd0, null)]
        [InlineData("chongo was ", false, 0xe0e67ad0, null)]
        [InlineData("chongo was h", false, 0xc2d32fa8, null)]
        [InlineData("chongo was he", false, 0x7f743fb7, null)]
        [InlineData("chongo was her", false, 0x6900631f, null)]
        [InlineData("chongo was here", false, 0xc59c990e, null)]
        [InlineData("chongo was here!", false, 0x448524fd, null)]
        [InlineData("chongo was here!\n", false, 0xd49930d5, null)]
        [InlineData("ch", true, 0x1c85c7ca, null)]
        [InlineData("cho", true, 0x0229fe89, null)]
        [InlineData("chon", true, 0x2c469265, null)]
        [InlineData("chong", true, 0xce566940, null)]
        [InlineData("chongo", true, 0x8bdd8ec7, null)]
        [InlineData("chongo ", true, 0x34787625, null)]
        [InlineData("chongo w", true, 0xd3ca6290, null)]
        [InlineData("chongo wa", true, 0xddeaf039, null)]
        [InlineData("chongo was", true, 0xc0e64870, null)]
        [InlineData("chongo was ", true, 0xdad35570, null)]
        [InlineData("chongo was h", true, 0x5a740578, null)]
        [InlineData("chongo was he", true, 0x5b004d15, null)]
        [InlineData("chongo was her", true, 0x6a9c09cd, null)]
        [InlineData("chongo was here", true, 0x2384f10a, null)]
        [InlineData("chongo was here!", true, 0xda993a47, null)]
        [InlineData("chongo was here!\n", true, 0x8227df4f, null)]
        [InlineData("cu", false, 0x4c298165, null)]
        [InlineData("cur", false, 0xfc563735, null)]
        [InlineData("curd", false, 0x8cb91483, null)]
        [InlineData("curds", false, 0x775bf5d0, null)]
        [InlineData("curds ", false, 0xd5c428d0, null)]
        [InlineData("curds a", false, 0x34cc0ea3, null)]
        [InlineData("curds an", false, 0xea3b4cb7, null)]
        [InlineData("curds and", false, 0x8e59f029, null)]
        [InlineData("curds and ", false, 0x2094de2b, null)]
        [InlineData("curds and w", false, 0xa65a0ad4, null)]
        [InlineData("curds and wh", false, 0x9bbee5f4, null)]
        [InlineData("curds and whe", false, 0xbe836343, null)]
        [InlineData("curds and whey", false, 0x22d5344e, null)]
        [InlineData("curds and whey\n", false, 0x19a1470c, null)]
        [InlineData("cu", true, 0x4a56b1ff, null)]
        [InlineData("cur", true, 0x70b8e86f, null)]
        [InlineData("curd", true, 0x0a5b4a39, null)]
        [InlineData("curds", true, 0xb5c3f670, null)]
        [InlineData("curds ", true, 0x53cc3f70, null)]
        [InlineData("curds a", true, 0xc03b0a99, null)]
        [InlineData("curds an", true, 0x7259c415, null)]
        [InlineData("curds and", true, 0x4095108b, null)]
        [InlineData("curds and ", true, 0x7559bdb1, null)]
        [InlineData("curds and w", true, 0xb3bf0bbc, null)]
        [InlineData("curds and wh", true, 0x2183ff1c, null)]
        [InlineData("curds and whe", true, 0x2bd54279, null)]
        [InlineData("curds and whey", true, 0x23a156ca, null)]
        [InlineData("curds and whey\n", true, 0x64e2d7e4, null)]
        [InlineData("hi", false, 0x683af69a, null)]
        [InlineData("hi", true, 0xaed2346e, null)]
        [InlineData("hello", false, 0x4f9f2cab, null)]
        [InlineData("hello", true, 0x02935131, null)]
        [InlineData(new byte[] { 0xff, 0x00, 0x00, 0x01 }, false, 0xc48fb86d, null)]
        [InlineData(new byte[] { 0x01, 0x00, 0x00, 0xff }, false, 0x2269f369, null)]
        [InlineData(new byte[] { 0xff, 0x00, 0x00, 0x02 }, false, 0xc18fb3b4, null)]
        [InlineData(new byte[] { 0x02, 0x00, 0x00, 0xff }, false, 0x50ef1236, null)]
        [InlineData(new byte[] { 0xff, 0x00, 0x00, 0x03 }, false, 0xc28fb547, null)]
        [InlineData(new byte[] { 0x03, 0x00, 0x00, 0xff }, false, 0x96c3bf47, null)]
        [InlineData(new byte[] { 0xff, 0x00, 0x00, 0x04 }, false, 0xbf8fb08e, null)]
        [InlineData(new byte[] { 0x04, 0x00, 0x00, 0xff }, false, 0xf3e4d49c, null)]
        [InlineData(new byte[] { 0x40, 0x51, 0x4e, 0x44 }, false, 0x32179058, null)]
        [InlineData(new byte[] { 0x44, 0x4e, 0x51, 0x40 }, false, 0x280bfee6, null)]
        [InlineData(new byte[] { 0x40, 0x51, 0x4e, 0x4a }, false, 0x30178d32, null)]
        [InlineData(new byte[] { 0x4a, 0x4e, 0x51, 0x40 }, false, 0x21addaf8, null)]
        [InlineData(new byte[] { 0x40, 0x51, 0x4e, 0x54 }, false, 0x4217a988, null)]
        [InlineData(new byte[] { 0x54, 0x4e, 0x51, 0x40 }, false, 0x772633d6, null)]
        [InlineData("127.0.0.1", false, 0x08a3d11e, null)]
        [InlineData("127.0.0.1", true, 0xb7e2323a, null)]
        [InlineData("127.0.0.2", false, 0x07a3cf8b, null)]
        [InlineData("127.0.0.2", true, 0x91dfb7d1, null)]
        [InlineData("127.0.0.3", false, 0x06a3cdf8, null)]
        [InlineData("127.0.0.3", true, 0x6bdd3d68, null)]
        [InlineData("64.81.78.68", false, 0x1d5636a7, null)]
        [InlineData("64.81.78.68", true, 0xd5b808e5, null)]
        [InlineData("64.81.78.74", false, 0x1353e852, null)]
        [InlineData("64.81.78.74", true, 0xbf16b916, null)]
        [InlineData("64.81.78.84", false, 0xa55b89ed, null)]
        [InlineData("64.81.78.84", true, 0x3c1a2017, null)]
        [InlineData("feedface", false, 0x0588b13c, null)]
        [InlineData("feedface", true, 0xf22f0174, null)]
        [InlineData("feedfacedaffdeed", false, 0xe83641e1, null)]
        [InlineData("feedfacedaffdeed", true, 0x6e69b533, null)]
        [InlineData("feedfacedeadbeef", false, 0xf1760448, null)]
        [InlineData("feedfacedeadbeef", true, 0x64c8bd58, null)]
        [InlineData("line 1\nline 2\nline 3", false, 0x97b4ea23, null)]
        [InlineData("chongo <Landon Curt Noll> /\\../\\", false, 0x9a4e92e6, null)]
        [InlineData("chongo <Landon Curt Noll> /\\../\\", true, 0xcfb14012, null)]
        [InlineData("chongo (Landon Curt Noll) /\\../\\", false, 0xf01b2511, null)]
        [InlineData("chongo (Landon Curt Noll) /\\../\\", true, 0x0bbb59c3, null)]
        [InlineData("http://antwrp.gsfc.nasa.gov/apod/astropix.html", false, 0xce524afa, null)]
        [InlineData("http://en.wikipedia.org/wiki/Fowler_Noll_Vo_hash", false, 0xdd16ef45, null)]
        [InlineData("http://epod.usra.edu/", false, 0x60648bb3, null)]
        [InlineData("http://exoplanet.eu/", false, 0x7fa4bcfc, null)]
        [InlineData("http://hvo.wr.usgs.gov/cam3/", false, 0x5053ae17, null)]
        [InlineData("http://hvo.wr.usgs.gov/cams/HMcam/", false, 0xc9302890, null)]
        [InlineData("http://hvo.wr.usgs.gov/kilauea/update/deformation.html", false, 0x956ded32, null)]
        [InlineData("http://hvo.wr.usgs.gov/kilauea/update/images.html", false, 0x9136db84, null)]
        [InlineData("http://hvo.wr.usgs.gov/kilauea/update/maps.html", false, 0xdf9d3323, null)]
        [InlineData("http://hvo.wr.usgs.gov/volcanowatch/current_issue.html", false, 0x32bb6cd0, null)]
        [InlineData("http://neo.jpl.nasa.gov/risk/", false, 0xc8f8385b, null)]
        [InlineData("http://norvig.com/21-days.html", false, 0xeb08bfba, null)]
        [InlineData("http://primes.utm.edu/curios/home.php", false, 0x62cc8e3d, null)]
        [InlineData("http://slashdot.org/", false, 0xc3e20f5c, null)]
        [InlineData("http://tux.wr.usgs.gov/Maps/155.25-19.5.html", false, 0x39e97f17, null)]
        [InlineData("http://volcano.wr.usgs.gov/kilaueastatus.php", false, 0x7837b203, null)]
        [InlineData("http://www.avo.alaska.edu/activity/Redoubt.php", false, 0x319e877b, null)]
        [InlineData("http://www.dilbert.com/fast/", false, 0xd3e63f89, null)]
        [InlineData("http://www.fourmilab.ch/gravitation/orbits/", false, 0x29b50b38, null)]
        [InlineData("http://www.fpoa.net/", false, 0x5ed678b8, null)]
        [InlineData("http://www.ioccc.org/index.html", false, 0xb0d5b793, null)]
        [InlineData("http://www.isthe.com/cgi-bin/number.cgi", false, 0x52450be5, null)]
        [InlineData("http://www.isthe.com/chongo/bio.html", false, 0xfa72d767, null)]
        [InlineData("http://www.isthe.com/chongo/index.html", false, 0x95066709, null)]
        [InlineData("http://www.isthe.com/chongo/src/calc/lucas-calc", false, 0x7f52e123, null)]
        [InlineData("http://www.isthe.com/chongo/tech/astro/venus2004.html", false, 0x76966481, null)]
        [InlineData("http://www.isthe.com/chongo/tech/astro/vita.html", false, 0x063258b0, null)]
        [InlineData("http://www.isthe.com/chongo/tech/comp/c/expert.html", false, 0x2ded6e8a, null)]
        [InlineData("http://www.isthe.com/chongo/tech/comp/calc/index.html", false, 0xb07d7c52, null)]
        [InlineData("http://www.isthe.com/chongo/tech/comp/fnv/index.html", false, 0xd0c71b71, null)]
        [InlineData("http://www.isthe.com/chongo/tech/math/number/howhigh.html", false, 0xf684f1bd, null)]
        [InlineData("http://www.isthe.com/chongo/tech/math/number/number.html", false, 0x868ecfa8, null)]
        [InlineData("http://www.isthe.com/chongo/tech/math/prime/mersenne.html", false, 0xf794f684, null)]
        [InlineData("http://www.isthe.com/chongo/tech/math/prime/mersenne.html#largest", false, 0xd19701c3, null)]
        [InlineData("http://www.lavarnd.org/cgi-bin/corpspeak.cgi", false, 0x346e171e, null)]
        [InlineData("http://www.lavarnd.org/cgi-bin/haiku.cgi", false, 0x91f8f676, null)]
        [InlineData("http://www.lavarnd.org/cgi-bin/rand-none.cgi", false, 0x0bf58848, null)]
        [InlineData("http://www.lavarnd.org/cgi-bin/randdist.cgi", false, 0x6317b6d1, null)]
        [InlineData("http://www.lavarnd.org/index.html", false, 0xafad4c54, null)]
        [InlineData("http://www.lavarnd.org/what/nist-test.html", false, 0x0f25681e, null)]
        [InlineData("http://www.macosxhints.com/", false, 0x91b18d49, null)]
        [InlineData("http://www.mellis.com/", false, 0x7d61c12e, null)]
        [InlineData("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/havoalert.cfm", false, 0x5147d25c, null)]
        [InlineData("http://www.nature.nps.gov/air/webcams/parks/havoso2alert/timelines_24.cfm", false, 0x9a8b6805, null)]
        [InlineData("http://www.paulnoll.com/", false, 0x4cd2a447, null)]
        [InlineData("http://www.pepysdiary.com/", false, 0x1e549b14, null)]
        [InlineData("http://www.sciencenews.org/index/home/activity/view", false, 0x2fe1b574, null)]
        [InlineData("http://www.skyandtelescope.com/", false, 0xcf0cd31e, null)]
        [InlineData("http://www.sput.nl/~rob/sirius.html", false, 0x6c471669, null)]
        [InlineData("http://www.systemexperts.com/", false, 0x0e5eef1e, null)]
        [InlineData("http://www.tq-international.com/phpBB3/index.php", false, 0x2bed3602, null)]
        [InlineData("http://www.travelquesttours.com/index.htm", false, 0xb26249e0, null)]
        [InlineData("http://www.wunderground.com/global/stations/89606.html", false, 0x2c9b86a4, null)]
        [InlineData("21701", false, 0xe415e2bb, 10)]
        [InlineData("M21701", false, 0x18a98d1d, 10)]
        [InlineData("2^21701-1", false, 0xb7df8b7b, 10)]
        [InlineData(new byte[] { 0x54, 0xc5 }, false, 0x241e9075, 10)]
        [InlineData(new byte[] { 0xc5, 0x54 }, false, 0x063f70dd, 10)]
        [InlineData("23209", false, 0x0295aed9, 10)]
        [InlineData("M23209", false, 0x56a7f781, 10)]
        [InlineData("2^23209-1", false, 0x253bc645, 10)]
        [InlineData(new byte[] { 0x5a, 0xa9 }, false, 0x46610921, 10)]
        [InlineData(new byte[] { 0xa9, 0x5a }, false, 0x7c1577f9, 10)]
        [InlineData("391581216093", false, 0x512b2851, 10)]
        [InlineData("391581*2^216093-1", false, 0x76823999, 10)]
        [InlineData(new byte[] { 0x05, 0xf9, 0x9d, 0x03, 0x4c, 0x81 }, false, 0xc0586935, 10)]
        [InlineData("FEDCBA9876543210", false, 0xf3415c85, 10)]
        [InlineData(new byte[] { 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10 }, false, 0x0ae4ff65, 10)]
        [InlineData("EFCDAB8967452301", false, 0x58b79725, 10)]
        [InlineData(new byte[] { 0xef, 0xcd, 0xab, 0x89, 0x67, 0x45, 0x23, 0x01 }, false, 0xdea43aa5, 10)]
        [InlineData("0123456789ABCDEF", false, 0x2bb3be35, 10)]
        [InlineData(new byte[] { 0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef }, false, 0xea777a45, 10)]
        [InlineData("1032547698BADCFE", false, 0x8f21c305, 10)]
        [InlineData(new byte[] { 0x10, 0x32, 0x54, 0x76, 0x98, 0xba, 0xdc, 0xfe }, false, 0x5c9d0865, 10)]
        [InlineData(0x00, false, 0xfa823dd5, 500)]
        [InlineData(0x07, false, 0x21a27271, 500)]
        [InlineData("~", false, 0x83c5c6d5, 500)]
        [InlineData(0x7f, false, 0x813b0881, 500)]
        public void Test_TransformBlock(object test, bool nullTerminated, uint expected, int? repeat)
        {
            // Get the bytes.
            byte[] bytes = TestExtensions.GetTestBytes(test, nullTerminated, repeat);

            // Create the hash algorithm.
            IHashAlgorithm hashAlgorithm = new FowlerNollVo1A32BitHashAlgorithm();

            // Hash each character, use each octet in UTF8?
            hashAlgorithm.TransformBlock(bytes);

            // Get the hash, convert and compare.
            Assert.Equal(expected, MemoryMarshal.Read<uint>(hashAlgorithm.Hash.Span));
        }

        #endregion
    }
}
